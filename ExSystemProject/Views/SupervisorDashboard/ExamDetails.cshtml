@model ExSystemProject.Models.Exam
@{
    ViewData["Title"] = $"Exam Details: {Model.ExamName}";
    Layout = "_SupervisorLayout";
}

<div class="row">
    <div class="col-md-4">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-white">
                <h5 class="mb-0">Exam Information</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label text-muted">Exam Name</label>
                    <h5>@Model.ExamName</h5>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">Course</label>
                    <h5>@Model.Crs?.CrsName</h5>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">Instructor</label>
                    <h5>@Model.Ins?.User?.Username</h5>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">Total Marks</label>
                    <h5>@Model.TotalMarks</h5>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">Passing Grade</label>
                    <h5>@Model.PassedGrade</h5>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">Start Time</label>
                    <h5>@Model.StartTime?.ToString("yyyy-MM-dd HH:mm")</h5>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">End Time</label>
                    <h5>@Model.EndTime?.ToString("yyyy-MM-dd HH:mm")</h5>
                </div>
                <div class="mb-3">
                    <label class="form-label text-muted">Status</label>
                    @{
                        string statusClass = "bg-primary";
                        string statusText = "Upcoming";

                        if (Model.Isactive != true)
                        {
                            statusClass = "bg-danger";
                            statusText = "Inactive";
                        }
                        else if (Model.StartTime <= DateTime.Now && Model.EndTime >= DateTime.Now)
                        {
                            statusClass = "bg-success";
                            statusText = "Active";
                        }
                        else if (Model.EndTime < DateTime.Now)
                        {
                            statusClass = "bg-secondary";
                            statusText = "Completed";
                        }
                    }
                    <h5><span class="badge @statusClass">@statusText</span></h5>
                </div>
            </div>
            <div class="card-footer bg-white">
                <div class="d-flex justify-content-between">
                    <a asp-action="Exams" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left me-1"></i> Back to Exams
                    </a>
                    <div>
                        @if (Model.StartTime > DateTime.Now && Model.Isactive != true)
                        {
                            <a asp-action="ApproveExam" asp-route-id="@Model.ExamId" class="btn btn-success">
                                <i class="bi bi-check-circle me-1"></i> Approve Exam
                            </a>
                        }
                        @if (Model.StartTime > DateTime.Now && Model.Isactive == true)
                        {
                            <a asp-action="RejectExam" asp-route-id="@Model.ExamId" class="btn btn-danger">
                                <i class="bi bi-x-circle me-1"></i> Reject Exam
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-8">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Exam Questions</h5>
                <span class="badge bg-primary">@ViewBag.QuestionCount Questions</span>
            </div>
            <div class="card-body">
                @if (ViewBag.Questions == null || ViewBag.Questions.Count == 0)
                {
                    <div class="text-center py-5">
                        <div class="display-1 text-muted">
                            <i class="bi bi-question-circle"></i>
                        </div>
                        <h3 class="mt-4">No Questions Found</h3>
                        <p class="text-muted">This exam doesn't have any questions yet.</p>
                    </div>
                }
                else
                {
                    <div class="accordion" id="questionsAccordion">
                        @foreach (var question in ViewBag.Questions)
                        {
                            <div class="accordion-item mb-3 border">
                                <h2 class="accordion-header">
                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                            data-bs-target="#question@(question.QuesId)">
                                        <div class="d-flex w-100 justify-content-between align-items-center">
                                            <div>
                                                <span class="badge bg-info me-2">@question.QuesType</span>
                                                @question.QuesText
                                            </div>
                                            <span class="badge bg-primary ms-2">@question.QuesScore points</span>
                                        </div>
                                    </button>
                                </h2>
                                <div id="question@(question.QuesId)" class="accordion-collapse collapse">
                                    <div class="accordion-body">
                                        <div class="mb-3">
                                            <strong>Question Type:</strong> @question.QuesType
                                        </div>
                                        <div class="mb-3">
                                            <strong>Score:</strong> @question.QuesScore points
                                        </div>
                                        <div class="mb-3">
                                            <strong>Choices:</strong>
                                            <ul class="list-group">
                                                @foreach (var choice in question.Choices)
                                                {
                                                    <li class="list-group-item @(choice.IsCorrect == true ? "list-group-item-success" : "")">
                                                        @choice.ChoiceText
                                                        @if (choice.IsCorrect == true)
                                                        {
                                                            <span class="badge bg-success float-end">Correct Answer</span>
                                                        }
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>

        <div class="card shadow-sm">
            <div class="card-header bg-white">
                <h5 class="mb-0">Assigned Students</h5>
            </div>
            <div class="card-body">
                @if (Model.StudentExams == null || !Model.StudentExams.Any())
                {
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i> No students have been assigned to this exam yet.
                    </div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-sm table-hover">
                            <thead>
                                <tr>
                                    <th>Student</th>
                                    <th>Status</th>
                                    <th>Score</th>
                                    <th>Taken On</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var studentExam in Model.StudentExams)
                                {
                                    <tr>
                                        <td>@studentExam.Student?.User?.Username</td>
                                        <td>
                                            @if (studentExam.PassFail == "Pass")
                                            {
                                                <span class="badge bg-success">Passed</span>
                                            }
                                            else if (studentExam.PassFail == "Fail")
                                            {
                                                <span class="badge bg-danger">Failed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-warning">Pending</span>
                                            }
                                        </td>
                                        <td>@studentExam.Score / @Model.TotalMarks</td>
                                        <td>@studentExam.ExaminationDate?.ToString("yyyy-MM-dd HH:mm")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize tooltips if needed
            if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                tooltipTriggerList.map(function(tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl);
                });
            }
        });
    </script>
}
