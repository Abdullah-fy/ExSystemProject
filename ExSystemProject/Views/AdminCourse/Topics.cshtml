@model List<ExSystemProject.Models.Topic>
@{
    ViewData["Title"] = "Course Topics";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var course = ViewBag.Course as ExSystemProject.DTOS.CourseDTO;
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Topics for Course: @course.CrsName</h5>
        <div>
            <a asp-action="AddTopic" asp-route-id="@course.CrsId" class="btn btn-primary">
                <i class="bi bi-plus"></i> Add New Topic
            </a>
            <a asp-action="Details" asp-route-id="@course.CrsId" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to Course Details
            </a>
        </div>
    </div>

    <div class="card-body">
        @if (TempData["Success"] != null && (bool)TempData["Success"])
        {
            <div class="alert alert-success alert-dismissible fade show d-none" role="alert" id="successAlert">
                @TempData["Message"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["Error"] != null && (bool)TempData["Error"])
        {
            <div class="alert alert-danger alert-dismissible fade show d-none" role="alert" id="errorAlert">
                @TempData["Message"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (ViewBag.Topics != null && ((List<ExSystemProject.Models.Topic>)ViewBag.Topics).Any())
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Topic Name</th>
                        <th>Description</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var topic in ViewBag.Topics)
                    {
                        <tr>
                            <td>@topic.TopicName</td>
                            <td>@(string.IsNullOrEmpty(topic.Descrtption) ? "No description" : topic.Descrtption)</td>
                            <td>
                                <span id="status-badge-@topic.TopicId" class="badge @(topic.Isactive == true ? "bg-success" : "bg-danger")">
                                    @(topic.Isactive == true ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td>
                                <div class="btn-group">
                                    <a asp-action="EditTopic" asp-route-id="@topic.TopicId" class="btn btn-sm btn-outline-primary">
                                        <i class="bi bi-pencil"></i> Edit
                                    </a>
                                    <a asp-action="DeleteTopic" asp-route-id="@topic.TopicId" class="btn btn-sm btn-outline-danger">
                                        <i class="bi bi-trash"></i> Delete
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-info">
                <h5>No topics</h5>
                <p>This course doesn't have any topics yet. Add a new topic using the button above.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Display SweetAlert for TempData messages
        @if (TempData["Success"] != null && (bool)TempData["Success"])
        {
            <text>
                        Swal.fire({
                            title: "Success!",
                            text: "@TempData["Message"]",
                            icon: "success",
                            timer: 3000,
                            showConfirmButton: false
                        });
            </text>
        }

        @if (TempData["Error"] != null && (bool)TempData["Error"])
        {
            <text>
                        Swal.fire({
                            title: "Error!",
                            text: "@TempData["Message"]",
                            icon: "error"
                        });
            </text>
        }
        });

        function toggleTopicStatus(topicId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You're about to change the status of this topic.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, change it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Show loading state
                    Swal.fire({
                        title: 'Processing...',
                        html: 'Please wait while we update the status.',
                        timerProgressBar: true,
                        didOpen: () => {
                            Swal.showLoading();

                            // Make the AJAX request
                            $.ajax({
                                url: '@Url.Action("ToggleTopicStatus", "AdminCourse")',
                                type: 'POST',
                                data: { id: topicId },
                                success: function(result) {
                                    if (result.success) {
                                        // Update badge
                                        var statusBadge = $('#status-badge-' + topicId);
                                        var toggleBtn = $('#toggle-btn-' + topicId);

                                        if (result.isActive) {
                                            // Topic is now active
                                            statusBadge.removeClass('bg-danger').addClass('bg-success');
                                            statusBadge.text('Active');

                                            toggleBtn.removeClass('btn-outline-success').addClass('btn-outline-warning');
                                            toggleBtn.html('<i class="bi bi-x-circle"></i> Deactivate');
                                        } else {
                                            // Topic is now inactive
                                            statusBadge.removeClass('bg-success').addClass('bg-danger');
                                            statusBadge.text('Inactive');

                                            toggleBtn.removeClass('btn-outline-warning').addClass('btn-outline-success');
                                            toggleBtn.html('<i class="bi bi-check-circle"></i> Activate');
                                        }

                                        // Show success message
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Status Changed!',
                                            text: result.message,
                                            timer: 2000,
                                            showConfirmButton: false
                                        });
                                    } else {
                                        // Show error message
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: result.message
                                        });
                                    }
                                },
                                error: function(xhr, status, error) {
                                    console.error(xhr.responseText);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Server Error',
                                        text: 'An error occurred while processing your request.'
                                    });
                                }
                            });
                        }
                    });
                }
            });
        }
    </script>
}
