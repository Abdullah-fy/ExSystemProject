@model IEnumerable<ExSystemProject.Models.UserAssignment>
@{
    ViewData["Title"] = "Supervisors Management";
    Layout = "~/Views/Shared/_BranchManagerLayout.cshtml";
    var activeFilter = ViewContext.HttpContext.Request.Query["active"].ToString();
}

<div class="card shadow">
    <div class="card-header bg-white d-flex justify-content-between align-items-center py-3">
        <h5 class="mb-0 text-primary">
            <i class="bi bi-people-fill me-2"></i> Supervisors
        </h5>
        <div>
            <div class="btn-group btn-group-sm me-2">
                <a asp-action="Index" asp-route-active="true" class="btn @(activeFilter == "True" || activeFilter == "true" || string.IsNullOrEmpty(activeFilter) ? "btn-primary" : "btn-outline-primary")">
                    <i class="bi bi-check-circle me-1"></i> Active
                </a>
                <a asp-action="Index" asp-route-active="false" class="btn @(activeFilter == "False" || activeFilter == "false" ? "btn-primary" : "btn-outline-primary")">
                    <i class="bi bi-x-circle me-1"></i> Inactive
                </a>
                <a asp-action="Index" asp-route-active="" class="btn @(activeFilter == "" ? "btn-primary" : "btn-outline-primary")">
                    <i class="bi bi-list me-1"></i> All
                </a>
            </div>
            <a asp-action="Create" class="btn btn-primary btn-sm">
                <i class="bi bi-plus-circle me-1"></i> Add New Supervisor
            </a>
        </div>
    </div>
    <div class="card-body">
        @if (TempData["Success"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle me-2"></i> @TempData["Success"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i> @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (Model == null || !Model.Any())
        {
            <div class="text-center py-5">
                <div class="display-1 text-muted">
                    <i class="bi bi-people"></i>
                </div>
                <h3 class="mt-4">No Supervisors Found</h3>
                <p class="text-muted">
                    @if (activeFilter == "True" || activeFilter == "true")
                    {
                        <span>There are no active supervisors assigned to this branch yet.</span>
                    }
                    else if (activeFilter == "False" || activeFilter == "false")
                    {
                        <span>There are no inactive supervisors in this branch.</span>
                    }
                    else
                    {
                        <span>There are no supervisors assigned to this branch yet.</span>
                    }
                </p>
                <div class="mt-4">
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-2"></i> Add New Supervisor
                    </a>
                </div>
            </div>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-hover" id="supervisorsTable">
                    <thead class="table-light">
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Assigned Track</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var supervisor in Model)
                        {
                            <tr class="@(supervisor.Isactive != true ? "table-secondary" : "")">
                                <td>@supervisor.AssignmentId</td>
                                <td>@supervisor.User?.Username</td>
                                <td>@supervisor.User?.Email</td>
                                <td>
                                    @if (supervisor.TrackId.HasValue)
                                    {
                                        @supervisor.Track?.TrackName
                                    }
                                    else
                                    {
                                        <span class="text-muted">No track assigned</span>
                                    }
                                </td>
                                <td>
                                    @if (supervisor.Isactive == true)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactive</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <a asp-action="Details" asp-route-id="@supervisor.AssignmentId" class="btn btn-outline-info">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@supervisor.AssignmentId" class="btn btn-outline-primary">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@supervisor.AssignmentId" class="btn btn-outline-danger">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                        <button type="button" class="btn @(supervisor.Isactive == true ? "btn-outline-warning" : "btn-outline-success") toggle-status"
                                                data-id="@supervisor.AssignmentId" data-active="@supervisor.Isactive">
                                            <i class="bi @(supervisor.Isactive == true ? "bi-x-circle" : "bi-check-circle")"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function() {
            // Initialize DataTable if needed
            if ($.fn.DataTable) {
                $('#supervisorsTable').DataTable({
                    "order": [[0, "desc"]]
                });
            }

            // Display SweetAlert for TempData messages
        @if (TempData["Success"] != null)
        {
            <text>
                        Swal.fire({
                            title: "Success!",
                            text: "@TempData["Success"]",
                            icon: "success",
                            confirmButtonColor: "#28a745"
                        });
            </text>
        }

        @if (TempData["Error"] != null)
        {
            <text>
                        Swal.fire({
                            title: "Error!",
                            text: "@TempData["Error"]",
                            icon: "error",
                            confirmButtonColor: "#dc3545"
                        });
            </text>
        }

            // Handle toggle status button click
            $('.toggle-status').on('click', function() {
                const btn = $(this);
                const id = btn.data('id');
                // Get current status as a boolean, handling different string formats
                const isActive = String(btn.data('active')).toLowerCase() === 'true';
                const statusText = isActive ? 'deactivate' : 'activate';

                console.log(`Toggle button clicked: ID=${id}, Current Status=${isActive}`);

                Swal.fire({
                    title: 'Are you sure?',
                    text: `Do you want to ${statusText} this supervisor?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: isActive ? '#dc3545' : '#28a745',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: `Yes, ${statusText} it!`
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Show loading state
                        Swal.fire({
                            title: 'Processing...',
                            text: `${isActive ? 'Deactivating' : 'Activating'} supervisor...`,
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });

                        // Send AJAX request to toggle status
                        $.ajax({
                            url: '@Url.Action("ToggleStatus")',
                            type: 'POST',
                            data: { id: id },
                            success: function(result) {
                                console.log('AJAX Response:', result);

                                if (result.success) {
                                    // Show success message
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Success!',
                                        text: result.message,
                                        timer: 2000,
                                        showConfirmButton: false
                                    });

                                    // Update button appearance
                                    if (result.isActive) {
                                        btn.removeClass('btn-outline-success').addClass('btn-outline-warning');
                                        btn.find('i').removeClass('bi-check-circle').addClass('bi-x-circle');
                                        btn.closest('tr').find('.badge').removeClass('bg-danger').addClass('bg-success').text('Active');
                                        btn.closest('tr').removeClass('table-secondary');
                                    } else {
                                        btn.removeClass('btn-outline-warning').addClass('btn-outline-success');
                                        btn.find('i').removeClass('bi-x-circle').addClass('bi-check-circle');
                                        btn.closest('tr').find('.badge').removeClass('bg-success').addClass('bg-danger').text('Inactive');
                                        btn.closest('tr').addClass('table-secondary');
                                    }

                                    // Most importantly, update the data-active attribute
                                    btn.data('active', result.isActive);
                                    btn.attr('data-active', result.isActive);

                                    console.log(`Status updated to: ${result.isActive}, Button data now:`, btn.data('active'));

                                    // Optional: refresh page after short delay
                                    // setTimeout(() => { window.location.reload(); }, 2000);
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: result.message || 'An error occurred while updating status.'
                                    });
                                }
                            },
                            error: function(xhr, status, error) {
                                console.error('AJAX Error:', error);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'An error occurred while processing your request'
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
}
