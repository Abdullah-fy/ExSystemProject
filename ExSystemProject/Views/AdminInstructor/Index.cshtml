@model List<ExSystemProject.DTOS.InstructorDTO>
@{
    ViewData["Title"] = "Instructors";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <h2>Instructors Management</h2>

    <div class="card mb-4">
        <div class="card-header">
            <i class="bi bi-filter me-1"></i>
            Filters
        </div>
        <div class="card-body">
            <form id="filterForm" method="get" class="row g-3">
                <div class="col-md-3">
                    <label for="branchId" class="form-label">Branch</label>
                    <select id="branchId" name="branchId" class="form-select" onchange="this.form.submit()">
                        <option value="">All Branches</option>
                        @foreach (var branch in ViewBag.Branches)
                        {
                            if (ViewBag.SelectedBranch != null && ViewBag.SelectedBranch.ToString() == branch.Value)
                            {
                                <option value="@branch.Value" selected>@branch.Text</option>
                            }
                            else
                            {
                                <option value="@branch.Value">@branch.Text</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="trackId" class="form-label">Track</label>
                    <select id="trackId" name="trackId" class="form-select" onchange="this.form.submit()">
                        <option value="">All Tracks</option>
                        @if (ViewBag.Tracks != null)
                        {
                            foreach (var track in ViewBag.Tracks)
                            {
                                if (ViewBag.SelectedTrack != null && ViewBag.SelectedTrack.ToString() == track.Value)
                                {
                                    <option value="@track.Value" selected>@track.Text</option>
                                }
                                else
                                {
                                    <option value="@track.Value">@track.Text</option>
                                }
                            }
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="searchString" class="form-label">Search</label>
                    <div class="input-group">
                        <input type="text" id="searchString" name="searchString" class="form-control" value="@ViewBag.SearchString" placeholder="Name, Email, Track...">
                        <button class="btn btn-outline-secondary" type="submit">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="activeOnly" class="form-label">Status</label>
                    <select id="activeOnly" name="activeOnly" class="form-select" onchange="this.form.submit()">
                        @if (ViewBag.ActiveOnly == null || (bool)ViewBag.ActiveOnly)
                        {
                            <option value="true" selected>Active Only</option>
                        }
                        else
                        {
                            <option value="true">Active Only</option>
                        }

                        @if (ViewBag.ActiveOnly != null && !(bool)ViewBag.ActiveOnly)
                        {
                            <option value="false" selected>Inactive Only</option>
                        }
                        else
                        {
                            <option value="false">Inactive Only</option>
                        }

                        @if (ViewBag.ActiveOnly == null)
                        {
                            <option value="" selected>All</option>
                        }
                        else
                        {
                            <option value="">All</option>
                        }
                    </select>
                </div>
            </form>
        </div>
    </div>

    @if (ViewBag.SelectedBranch != null || ViewBag.SelectedTrack != null || !string.IsNullOrEmpty(ViewBag.SearchString))
    {
        <div class="alert alert-info mb-3">
            @if (ViewBag.SelectedBranch != null)
            {
                <div>
                    <i class="bi bi-filter"></i> Filtered by Branch
                    <a asp-action="Index" class="float-end">Clear Filter</a>
                </div>
            }

            @if (ViewBag.SelectedTrack != null)
            {
                <div>
                    <i class="bi bi-filter"></i> Filtered by Track
                    <a asp-action="Index" class="float-end">Clear Filter</a>
                </div>
            }

            @if (!string.IsNullOrEmpty(ViewBag.SearchString))
            {
                <div>
                    <i class="bi bi-search"></i> Search: "@ViewBag.SearchString"
                    <a asp-action="Index" class="float-end">Clear Filter</a>
                </div>
            }
        </div>
    }

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div>
                <i class="bi bi-table me-1"></i>
                Instructors List
            </div>
            <a href="@Url.Action("Create", "AdminInstructor")" class="btn btn-success">
                <i class="bi bi-plus"></i> Add New Instructor
            </a>
        </div>
        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle-fill me-2"></i> @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table id="instructorsTable" class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Email</th>
                                <th>Gender</th>
                                <th>Track</th>
                                <th>Branch</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var instructor in Model)
                            {
                                <tr>
                                    <td>@instructor.Username</td>
                                    <td>@instructor.Email</td>
                                    <td>@(instructor.Gender == "M" ? "Male" : "Female")</td>
                                    <td>@instructor.TrackName</td>
                                    <td>@instructor.BranchName</td>
                                    <td>
                                        @if (instructor.Isactive == true)
                                        {
                                            <span class="badge bg-success">Active</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">Inactive</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a href="@Url.Action("Details", "AdminInstructor", new { id = instructor.InsId })" class="btn btn-info btn-sm">
                                                <i class="bi bi-info-circle"></i>
                                            </a>
                                            <a href="@Url.Action("Edit", "AdminInstructor", new { id = instructor.InsId })" class="btn btn-warning btn-sm">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <a href="@Url.Action("Courses", "AdminInstructor", new { id = instructor.InsId })" class="btn btn-primary btn-sm">
                                                <i class="bi bi-book"></i>
                                            </a>
                                            <a href="@Url.Action("Delete", "AdminInstructor", new { id = instructor.InsId })" class="btn btn-danger btn-sm">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <h5 class="alert-heading">No instructors found</h5>
                    <p>There are no instructors matching your filter criteria. Try adjusting your filters or <a href="@Url.Action("Create", "AdminInstructor")">add a new instructor</a>.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable with modified options
            if ($('#instructorsTable tbody tr').length > 0) {
                $('#instructorsTable').DataTable({
                    responsive: true,
                    // Disable searching since we have custom search
                    searching: false,
                    // Let server handle pagination
                    paging: true
                });
            }

            // Branch change handler to update tracks dropdown
            $('#branchId').change(function() {
                var branchId = $(this).val();
                if (branchId) {
                    $.getJSON('@Url.Action("GetTracksByBranch", "AdminInstructor")', { branchId: branchId }, function(data) {
                        var trackSelect = $('#trackId');
                        trackSelect.empty();
                        trackSelect.append($('<option>').val('').text('All Tracks'));
                        $.each(data, function(index, item) {
                            trackSelect.append(
                                $('<option>').val(item.value).text(item.text)
                            );
                        });
                        // Submit form after populating tracks
                        $('#filterForm').submit();
                    });
                } else {
                    $('#trackId').empty().append($('<option>').val('').text('All Tracks'));
                    // Submit the form immediately
                    $('#filterForm').submit();
                }
                return false; // Prevent double submission
            });

            // Handle Enter key in search box
            $('#searchString').keypress(function(e) {
                if(e.which === 13) { // Enter key
                    e.preventDefault();
                    $('#filterForm').submit();
                }
            });
        });
    </script>
}
