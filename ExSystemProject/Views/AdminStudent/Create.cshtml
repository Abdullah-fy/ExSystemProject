@model ExSystemProject.DTOS.StudentDTO
@{
    ViewData["Title"] = "Create Student";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid px-4">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="bi bi-person-plus-fill me-2"></i>Create New Student</h5>
        </div>
        <div class="card-body">
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger mb-3">
                    <h6 class="alert-heading">Please fix the following errors:</h6>
                    <div asp-validation-summary="All" class="text-danger"></div>
                </div>
            }

            <form asp-action="Create" method="post" id="createStudentForm">
                <!-- Hidden fields for TrackName and BranchName -->
                <input type="hidden" asp-for="TrackName" id="hiddenTrackName" value="" />
                <input type="hidden" asp-for="BranchName" id="hiddenBranchName" value="" />

                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Username" class="form-label">Username <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-person"></i></span>
                                <input asp-for="Username" class="form-control" placeholder="Enter username" required />
                            </div>
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Email" class="form-label">Email <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                                <input asp-for="Email" class="form-control" placeholder="example@domain.com" required />
                            </div>
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="Gender" class="form-label">Gender <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-gender-ambiguous"></i></span>
                                <select asp-for="Gender" class="form-select" required>
                                    <option value="">-- Select Gender --</option>
                                    <option value="M">Male</option>
                                    <option value="F">Female</option>
                                </select>
                            </div>
                            <span asp-validation-for="Gender" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="Password" class="form-label">Password <span class="text-danger">*</span></label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-lock"></i></span>
                                <input type="password" id="Password" name="Password" class="form-control" placeholder="Enter password" required />
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            @if (ViewData["PasswordError"] != null)
                            {
                                <span class="text-danger">@ViewData["PasswordError"]</span>
                            }
                        </div>
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="BranchId" class="form-label">Branch</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-building"></i></span>
                                <select id="BranchId" name="BranchId" class="form-select">
                                    <option value="">-- Select Branch --</option>
                                    @foreach (var branch in ViewBag.Branches)
                                    {
                                        <option value="@branch.Value">@branch.Text</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="TrackId" class="form-label">Track</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-diagram-3"></i></span>
                                <select asp-for="TrackId" id="TrackId" class="form-select">
                                    <option value="">-- First Select Branch --</option>
                                </select>
                            </div>
                            <span asp-validation-for="TrackId" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Back to List
                    </a>
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-save"></i> Create Student
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password toggle visibility
            const togglePassword = document.getElementById('togglePassword');
            const passwordInput = document.getElementById('Password');

            togglePassword.addEventListener('click', function() {
                const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordInput.setAttribute('type', type);
                this.querySelector('i').className = type === 'password' ? 'bi bi-eye' : 'bi bi-eye-slash';
            });

            // Branch-Track dependency
            const branchSelect = document.getElementById('BranchId');
            branchSelect.addEventListener('change', function() {
                const branchId = this.value;
                const branchName = this.options[this.selectedIndex].text;
                const trackDropdown = document.getElementById('TrackId');

                // Update hidden branch name field
                document.getElementById('hiddenBranchName').value = branchName;

                trackDropdown.innerHTML = '<option value="">-- Loading Tracks... --</option>';
                trackDropdown.disabled = true;

                if (!branchId) {
                    trackDropdown.innerHTML = '<option value="">-- First Select Branch --</option>';
                    trackDropdown.disabled = false;
                    return;
                }

                fetch('/AdminStudent/GetTracksByBranch?branchId=' + branchId)
                    .then(response => response.json())
                    .then(data => {
                        trackDropdown.innerHTML = '<option value="">-- Select Track --</option>';

                        if (data && data.length > 0) {
                            data.forEach(track => {
                                const option = document.createElement('option');
                                option.value = track.trackId;
                                option.textContent = track.trackName;
                                trackDropdown.appendChild(option);
                            });
                        } else {
                            trackDropdown.innerHTML = '<option value="">-- No tracks available --</option>';
                        }

                        trackDropdown.disabled = false;
                    })
                    .catch(error => {
                        console.error('Error loading tracks:', error);
                        trackDropdown.innerHTML = '<option value="">-- Error loading tracks --</option>';
                        trackDropdown.disabled = false;
                    });
            });

            // Track selection change handler
            const trackSelect = document.getElementById('TrackId');
            trackSelect.addEventListener('change', function() {
                const trackName = this.options[this.selectedIndex].text;
                document.getElementById('hiddenTrackName').value = trackName;
            });

            // Form submission validation
            document.getElementById('createStudentForm').addEventListener('submit', function(e) {
                const username = document.getElementById('Username').value;
                const email = document.getElementById('Email').value;
                const gender = document.getElementById('Gender').value;
                const password = document.getElementById('Password').value;
                const trackId = document.getElementById('TrackId').value;

                // Update hidden field values before submission
                if (trackId) {
                    const trackName = document.getElementById('TrackId').options[document.getElementById('TrackId').selectedIndex].text;
                    document.getElementById('hiddenTrackName').value = trackName;
                }

                const branchId = document.getElementById('BranchId').value;
                if (branchId) {
                    const branchName = document.getElementById('BranchId').options[document.getElementById('BranchId').selectedIndex].text;
                    document.getElementById('hiddenBranchName').value = branchName;
                }

                if (!username || !email || !gender || !password) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'error',
                        title: 'Required Fields Missing',
                        text: 'Please fill in all required fields',
                        confirmButtonColor: '#a41e22'
                    });
                } else if (password.length < 6) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'error',
                        title: 'Password Too Short',
                        text: 'Password must be at least 6 characters long',
                        confirmButtonColor: '#a41e22'
                    });
                }
            });
        });
    </script>
}
