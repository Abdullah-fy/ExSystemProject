@model IEnumerable<ExSystemProject.DTOS.StudentDTO>
@{
    ViewData["Title"] = "Student Management";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Student List</h5>
        <a asp-action="Create" class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> Add New Student
        </a>
    </div>

    <div class="card-body">
        @if (TempData["GeneratedPassword"] != null)
        {
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                <h5 class="alert-heading">Student Created Successfully</h5>
                <p>Please securely share the following temporary password with the student:</p>
                <div class="input-group mb-3">
                    <input type="text" class="form-control" id="passwordDisplay" value="@TempData["GeneratedPassword"]" readonly>
                    <div class="input-group-append">
                        <button class="btn btn-outline-secondary copy-btn" type="button" onclick="copyPassword()">
                            <i class="bi bi-clipboard"></i> Copy
                        </button>
                    </div>
                </div>
                <p class="mb-0">The student will be required to change this password on first login.</p>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="Index" method="get" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Branch</label>
                <select name="branchId" class="form-select" asp-items="ViewBag.Branches" onchange="this.form.submit()">
                    <option value="">-- All Branches --</option>
                </select>
            </div>

            <div class="col-md-3">
                <label class="form-label">Track</label>
                <select name="trackId" class="form-select" asp-items="ViewBag.Tracks" onchange="this.form.submit()">
                    <option value="">-- All Tracks --</option>
                </select>
            </div>

            <div class="col-md-3">
                <label class="form-label">Status</label>
                <select name="activeOnly" class="form-select" onchange="this.form.submit()">
                    <option value="" selected="@(ViewBag.ActiveOnly == null)">All</option>
                    <option value="true" selected="@(ViewBag.ActiveOnly == true)">Active Only</option>
                    <option value="false" selected="@(ViewBag.ActiveOnly == false)">Inactive Only</option>
                </select>
            </div>
        </form>


        @if (ViewBag.BranchId != null)
        {
            <div class="alert alert-info">
                <i class="bi bi-filter"></i> Filtered by Branch: <strong>@ViewBag.BranchName</strong>
                <a asp-action="Index" asp-route-trackId="@ViewBag.TrackId" asp-route-activeOnly="@ViewBag.ActiveOnly" class="float-end">Clear Branch Filter</a>
            </div>
        }

        @if (ViewBag.TrackId != null)
        {
            <div class="alert alert-info">
                <i class="bi bi-filter"></i> Filtered by Track: <strong>@ViewBag.TrackName</strong>
                <a asp-action="Index" asp-route-branchId="@ViewBag.BranchId" asp-route-activeOnly="@ViewBag.ActiveOnly" class="float-end">Clear Track Filter</a>
            </div>
        }


        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle me-2"></i> @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i> @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Gender</th>
                            <th>Branch</th>
                            <th>Track</th>
                            <th>Enrollment Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var student in Model)
                        {
                            <tr>
                                <td>@student.StudentId</td>
                                <td>@student.Username</td>
                                <td>@student.Email</td>
                                <td>@(student.Gender == "M" ? "Male" : "Female")</td>
                                <td>@(string.IsNullOrEmpty(student.BranchName) ? "Not Assigned" : student.BranchName)</td>
                                <td>@(string.IsNullOrEmpty(student.TrackName) ? "Not Assigned" : student.TrackName)</td>
                                <td>@student.EnrollmentDate?.ToString("d")</td>
                                <td>
                                    @if (student.Isactive == true)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactive</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@student.StudentId" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-pencil"></i> Edit
                                        </a>
                                        <a asp-action="Details" asp-route-id="@student.StudentId" class="btn btn-sm btn-outline-info">
                                            <i class="bi bi-info-circle"></i> Details
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@student.StudentId" class="btn btn-sm btn-outline-danger">
                                            <i class="bi bi-trash"></i> Delete
                                        </a>
                                        <a asp-action="AssignExam" asp-route-id="@student.StudentId" class="btn btn-sm btn-outline-secondary">
                                            <i class="bi bi-file-earmark-text"></i> Assign Exam
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <h5 class="alert-heading">No students found!</h5>
                <p>There are no students matching your criteria. Click the "Add New Student" button to create one.</p>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function() {
            // Handle success message with SweetAlert if needed
        @if (TempData["SuccessMessage"] != null && TempData["GeneratedPassword"] == null)
        {
            <text>
                        // Create a temporary div to decode HTML entities
                        var tempDiv = document.createElement('div');
                        tempDiv.innerHTML = "@TempData["SuccessMessage"]";
                        var decodedMessage = tempDiv.textContent;

                        Swal.fire({
                            title: "Success!",
                            text: decodedMessage,
                            icon: "success",
                            confirmButtonColor: "#a41e22"
                        });
            </text>
        }
        });

        function copyPassword() {
            var passwordField = document.getElementById("passwordDisplay");
            passwordField.select();
            document.execCommand("copy");

            var copyBtn = document.querySelector(".copy-btn");
            var originalHtml = copyBtn.innerHTML;
            copyBtn.innerHTML = '<i class="bi bi-check-circle"></i> Copied!';

            setTimeout(function() {
                copyBtn.innerHTML = originalHtml;
            }, 2000);
        }
    </script>
}
