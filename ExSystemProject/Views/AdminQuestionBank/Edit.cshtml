@model ExSystemProject.DTOS.QuestionBankDTO
@{
    ViewData["Title"] = "Edit Question";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="card">
    <div class="card-header">
        <h5 class="mb-0">Edit Question</h5>
    </div>
    <div class="card-body">
        <form asp-action="Edit" method="post" id="questionForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="QuesId" />

            <div class="mb-3">
                <label asp-for="QuesText" class="form-label">Question Text</label>
                <textarea asp-for="QuesText" class="form-control" rows="3" required></textarea>
                <span asp-validation-for="QuesText" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="QuesType" class="form-label">Question Type</label>
                <input asp-for="QuesType" class="form-control" readonly />
            </div>

            @if (Model.QuesType == "MCQ" && Model.Choices != null)
            {
                <div id="mcqOptions">
                    <h6 class="mt-4 mb-3">Answer Choices</h6>
                    @for (int i = 0; i < Model.Choices.Count; i++)
                    {
                        <div class="card mb-3">
                            <div class="card-body">
                                <input type="hidden" name="Choices[@i].ChoiceId" value="@Model.Choices[i].ChoiceId" />
                                <div class="mb-2">
                                    <label class="form-label">Choice @(i + 1)</label>
                                    <input name="Choices[@i].ChoiceText" class="form-control" required value="@Model.Choices[i].ChoiceText" />
                                </div>
                                <div class="form-check">
                                    <!-- Hidden field to capture the IsCorrect value -->
                                    <input type="hidden" name="Choices[@i].IsCorrect" value="false" />
                                    <input type="radio" id="correctAnswer_@i" name="correctAnswer" value="@i"
                                           class="form-check-input" @(Model.Choices[i].IsCorrect ? "checked" : "") />
                                    <label class="form-check-label" for="correctAnswer_@i">
                                        Correct Answer
                                    </label>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else if (Model.QuesType == "TF" && Model.Choices != null)
            {
                <div id="tfOptions" class="card mb-3">
                    <div class="card-body">
                        <h6 class="mb-3">Correct Answer</h6>
                        <div class="form-check form-check-inline">
                            <input type="radio" id="trueOption" name="correctAnswer" class="form-check-input" value="true"
                            @(Model.Choices.Any(c => c.IsCorrect && c.ChoiceText.ToLower() == "true") ? "checked" : "") />
                            <label class="form-check-label" for="trueOption">True</label>
                        </div>
                        <div class="form-check form-check-inline">
                            <input type="radio" id="falseOption" name="correctAnswer" class="form-check-input" value="false"
                            @(Model.Choices.Any(c => c.IsCorrect && c.ChoiceText.ToLower() == "false") ? "checked" : "") />
                            <label class="form-check-label" for="falseOption">False</label>
                        </div>
                    </div>
                </div>
            }

            <div class="mb-3">
                <label asp-for="QuesScore" class="form-label">Question Score</label>
                <input asp-for="QuesScore" class="form-control" type="number" min="1" max="100" required />
                <span asp-validation-for="QuesScore" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="ExamId" class="form-label">Exam</label>
                <select asp-for="ExamId" class="form-select" asp-items="ViewBag.Exams">
                    <option value="">-- None (Question Bank Only) --</option>
                </select>
                <span asp-validation-for="ExamId" class="text-danger"></span>
            </div>

            <div class="d-flex justify-content-between">
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left"></i> Back to List
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save"></i> Save Changes
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            // Handle form submission
            $('#questionForm').submit(function (e) {
                if ('@Model.QuesType' === 'MCQ') {
                    // Ensure one option is selected for MCQ
                    if ($('input[name="correctAnswer"]:checked').length === 0) {
                        alert('Please select one correct answer for the multiple choice question.');
                        e.preventDefault();
                        return false;
                    }

                    // Mark the selected answer as correct in the form data
                    var selectedIndex = $('input[name="correctAnswer"]:checked').val();
                    if (selectedIndex !== undefined) {
                        $('input[name="Choices[' + selectedIndex + '].IsCorrect"]').val('true');
                    }
                }
            });
        });
    </script>
}
