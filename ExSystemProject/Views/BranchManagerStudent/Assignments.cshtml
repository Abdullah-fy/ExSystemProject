@model Student
@{
    ViewData["Title"] = "Student Course Assignments";
    Layout = "~/Views/Shared/_BranchManagerLayout.cshtml";
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Course Assignments for @Model.User?.Username</h5>
        <div>
            <a asp-action="Details" asp-route-id="@Model.StudentId" class="btn btn-sm btn-secondary">
                <i class="bi bi-arrow-left me-1"></i> Back to Student
            </a>
            <a asp-action="Index" class="btn btn-sm btn-outline-secondary ms-2">
                <i class="bi bi-list me-1"></i> All Students
            </a>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-3">
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title">@Model.User?.Username</h5>
                        <p class="card-text text-muted">@Model.User?.Email</p>
                        <p class="card-text">
                            <span class="badge @(Model.Isactive == true ? "bg-success" : "bg-danger")">
                                @(Model.Isactive == true ? "Active" : "Inactive")
                            </span>
                        </p>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Track Information</h5>
                        <p class="card-text">
                            <strong>Track:</strong> @Model.Track?.TrackName
                        </p>
                        <p class="card-text">
                            <strong>Branch:</strong> @Model.Track?.Branch?.BranchName
                        </p>
                        <p class="card-text">
                            <strong>Enrolled:</strong> @Model.EnrollmentDate?.ToString("dd/MM/yyyy")
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-md-9">
                <h5>Enrolled Courses</h5>
                <hr />
                @if (Model.StudentCourses != null && Model.StudentCourses.Any(c => c.Isactive == true))
                {
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Course</th>
                                    <th>Instructor</th>
                                    <th>Enrolled On</th>
                                    <th>Grade</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var course in Model.StudentCourses.Where(c => c.Isactive == true))
                                {
                                    <tr>
                                        <td>@course.Crs?.CrsName</td>
                                        <td>@(course.Crs?.Ins?.User?.Username ?? "Not Assigned")</td>
                                        <td>@course.EnrolledAt?.ToString("dd/MM/yyyy")</td>
                                        <td>@(course.Grade?.ToString() ?? "Not graded")</td>
                                        <td>
                                            @if (course.Ispassed == true)
                                            {
                                                <span class="badge bg-success">Passed</span>
                                            }
                                            else if (course.Ispassed == false)
                                            {
                                                <span class="badge bg-danger">Failed</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">Pending</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <button type="button" class="btn btn-outline-danger"
                                                        onclick="confirmUnenroll(@Model.StudentId, @course.CrsId)">
                                                    <i class="bi bi-x-circle"></i> Unenroll
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i> No active course enrollments found.
                    </div>
                }

                <h5 class="mt-4">Available Courses</h5>
                <hr />
                <div id="availableCoursesSection" class="mt-3">
                    <form id="enrollForm" method="post" asp-controller="BranchManagerStudent" asp-action="EnrollInCourse">
                        <input type="hidden" name="studentId" value="@Model.StudentId" />
                        <div class="row g-3 align-items-end">
                            <div class="col-md-9">
                                <label for="courseId" class="form-label">Select Course</label>
                                <select class="form-select" id="courseId" name="courseId" required>
                                    <option value="">-- Select a course --</option>
                                    @* This will be populated via AJAX *@
                                </select>
                            </div>
                            <div class="col-md-3">
                                <button type="submit" id="enrollButton" class="btn btn-primary w-100">
                                    <i class="bi bi-plus-circle me-1"></i> Enroll
                                </button>
                            </div>
                        </div>
                    </form>
                </div>

            </div>
        </div>
    </div>
</div>

<!-- Unenroll Confirmation Modal -->
<div class="modal fade" id="unenrollModal" tabindex="-1" aria-labelledby="unenrollModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="unenrollModalLabel">Confirm Unenrollment</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to unenroll this student from the selected course?</p>
                <p>This action will remove the student's access to course materials and exams.</p>
            </div>
            <div class="modal-footer">
                <form id="unenrollForm" method="post" asp-controller="BranchManagerStudent" asp-action="UnenrollFromCourse">
                    <input type="hidden" id="unenrollStudentId" name="studentId" />
                    <input type="hidden" id="unenrollCourseId" name="courseId" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Confirm Unenrollment</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {
            // Load available courses when the page loads
            loadAvailableCourses();

            // Add form submission handler with direct logging
            $('#enrollForm').on('submit', function(e) {
                const studentId = @Model.StudentId;
                const courseId = $('#courseId').val();

                console.log('Form submission - Student ID:', studentId);
                console.log('Form submission - Course ID:', courseId);

                if (!courseId) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'warning',
                        title: 'Selection Required',
                        text: 'Please select a course first',
                        confirmButtonColor: '#a41e22'
                    });
                    return false;
                }

                // Allow form to submit normally - this will post to EnrollInCourse
                return true;
            });

            // Handle success/error messages
        @if (TempData["Success"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: '@TempData["Success"]',
                        confirmButtonColor: '#a41e22'
                    });
            </text>
        }

        @if (TempData["Error"] != null)
        {
            <text>
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: '@TempData["Error"]',
                        confirmButtonColor: '#a41e22'
                    });
            </text>
        }
        });

        function loadAvailableCourses() {
            console.log("Loading available courses for student ID: @Model.StudentId");

            $.ajax({
                url: '/BranchManagerStudent/GetAvailableCourses',
                type: 'GET',
                data: {
                    studentId: @Model.StudentId
                },
                success: function (data) {
                    console.log("Courses loaded:", data);
                    var select = $('#courseId');
                    select.empty();
                    select.append('<option value="">-- Select a course --</option>');

                    if (data && data.length > 0) {
                        $.each(data, function (i, course) {
                            select.append($('<option>', {
                                value: course.crsId,
                                text: course.crsName + ' (Instructor: ' + (course.instructorName || 'Not Assigned') + ')'
                            }));
                        });
                    } else {
                        select.append('<option value="" disabled>No available courses found</option>');
                    }
                },
                error: function (err) {
                    console.error('Error loading available courses:', err);
                    $('#availableCoursesSection').html('<div class="alert alert-danger">Error loading available courses</div>');
                }
            });
        }

        function confirmUnenroll(studentId, courseId) {
            $('#unenrollStudentId').val(studentId);
            $('#unenrollCourseId').val(courseId);

            // Show the modal
            var unenrollModal = new bootstrap.Modal(document.getElementById('unenrollModal'));
            unenrollModal.show();
        }
    </script>
}
