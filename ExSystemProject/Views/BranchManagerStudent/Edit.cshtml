@model ExSystemProject.DTOS.StudentDTO
@{
    ViewData["Title"] = "Edit Student";
    Layout = "~/Views/Shared/_BranchManagerLayout.cshtml";
}

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Edit Student</h5>
        <div>
            <a asp-action="Index" class="btn btn-sm btn-secondary">
                <i class="bi bi-arrow-left me-1"></i> Back to List
            </a>
        </div>
    </div>
    <div class="card-body">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="StudentId" />

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Username" class="form-label">Username</label>
                        <input asp-for="Username" class="form-control" />
                        <span asp-validation-for="Username" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Email" class="form-label">Email</label>
                        <input asp-for="Email" class="form-control" type="email" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Gender" class="form-label">Gender</label>
                        <select asp-for="Gender" class="form-select">
                            <option value="">-- Select Gender --</option>
                            <option value="M">Male</option>
                            <option value="F">Female</option>
                        </select>
                        <span asp-validation-for="Gender" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="TrackId" class="form-label">Track</label>
                        <select asp-for="TrackId" class="form-select" asp-items="ViewBag.Tracks">
                            <option value="">-- Select Track --</option>
                        </select>
                        <span asp-validation-for="TrackId" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label d-block">Status</label>
                <div class="form-check form-switch">
                    <input type="checkbox" class="form-check-input" role="switch" id="examStatusSwitch"
                           name="Isactive" value="true" @(Model.Isactive == true ? "checked" : "") />
                    <label class="form-check-label" for="examStatusSwitch">
                        <span id="statusText" class="ms-2">
                            @(Model.Isactive == true ? "Active" : "Inactive")
                        </span>
                    </label>
                </div>
            </div>

            <div class="mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save me-1"></i> Save Changes
                </button>
                <a asp-action="Index" class="btn btn-outline-secondary ms-2">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        $(document).ready(function() {
            // Update status text when switch changes
            $('#examStatusSwitch').change(function() {
                var isChecked = $(this).is(':checked');
                if(isChecked) {
                    $('#statusText').text('Active').removeClass('text-danger').addClass('text-success');
                } else {
                    $('#statusText').text('Inactive').removeClass('text-success').addClass('text-danger');
                }
            });

            // Set initial state
            var initialState = @Json.Serialize(Model.Isactive ?? true);
            $('#examStatusSwitch').prop('checked', initialState).trigger('change');

            // Form validation
            $('form').on('submit', function(e) {
                // Ensure the status is properly included in the form data
                var isActive = $('#examStatusSwitch').is(':checked');
                if ($('input[name="Isactive"]').length === 0) {
                    $(this).append('<input type="hidden" name="Isactive" value="' + isActive + '" />');
                }
            });
        });
    </script>
}
